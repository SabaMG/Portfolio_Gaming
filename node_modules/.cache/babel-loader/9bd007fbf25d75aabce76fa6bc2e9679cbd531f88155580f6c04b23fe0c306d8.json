{"ast":null,"code":"var _jsxFileName = \"/Users/saba/portfolio/src/ThreeScene.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { gsap } from 'gsap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeScene = () => {\n  _s();\n  const mountRef = useRef(null);\n  const cameraRef = useRef(null);\n  useEffect(() => {\n    var _mountRef$current;\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xffffff);\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(10, 5, 10); // Initial camera position\n    cameraRef.current = camera; // Store camera reference for button access\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    (_mountRef$current = mountRef.current) === null || _mountRef$current === void 0 ? void 0 : _mountRef$current.appendChild(renderer.domElement);\n\n    // Main Building\n    const mainBuildingGeometry = new THREE.BoxGeometry(4, 4, 4);\n    const mainBuildingMaterial = new THREE.MeshStandardMaterial({\n      color: 0x8b4513\n    });\n    const mainBuilding = new THREE.Mesh(mainBuildingGeometry, mainBuildingMaterial);\n    mainBuilding.position.y = 2;\n    scene.add(mainBuilding);\n\n    // Roof\n    const roofGeometry = new THREE.ConeGeometry(3.5, 2, 4);\n    const roofMaterial = new THREE.MeshStandardMaterial({\n      color: 0x8b0000\n    });\n    const roof = new THREE.Mesh(roofGeometry, roofMaterial);\n    roof.position.y = 5;\n    roof.rotation.y = Math.PI / 4;\n    scene.add(roof);\n\n    // Lighting\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambientLight);\n    const pointLight = new THREE.PointLight(0xffffff, 1);\n    pointLight.position.set(10, 10, 10);\n    scene.add(pointLight);\n\n    // Controls\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.25;\n\n    // Animation loop\n    function animate() {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    }\n    animate();\n\n    // Cleanup on unmount\n    return () => {\n      var _mountRef$current2;\n      renderer.dispose();\n      (_mountRef$current2 = mountRef.current) === null || _mountRef$current2 === void 0 ? void 0 : _mountRef$current2.removeChild(renderer.domElement);\n    };\n  }, []);\n\n  // Array of camera positions for smooth transition\n  const cameraPositions = [{\n    x: 10,\n    y: 5,\n    z: 10\n  }, {\n    x: 0,\n    y: 10,\n    z: 10\n  }, {\n    x: -10,\n    y: 5,\n    z: -10\n  }];\n  let positionIndex = 0;\n\n  // Function to smoothly change the camera angle using gsap\n  const changeCameraAngle = () => {\n    if (cameraRef.current) {\n      const pos = cameraPositions[positionIndex];\n      gsap.to(cameraRef.current.position, {\n        x: pos.x,\n        y: pos.y,\n        z: pos.z,\n        duration: 2,\n        // Duration of the transition in seconds\n        onUpdate: () => {\n          var _cameraRef$current;\n          // Make sure the camera looks at the center of the scene during the transition\n          (_cameraRef$current = cameraRef.current) === null || _cameraRef$current === void 0 ? void 0 : _cameraRef$current.lookAt(0, 0, 0);\n        }\n      });\n      positionIndex = (positionIndex + 1) % cameraPositions.length;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeCameraAngle,\n      style: {\n        position: 'absolute',\n        zIndex: 1,\n        top: 10,\n        left: 10\n      },\n      children: \"Change Camera Angle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(ThreeScene, \"qdpJGPDye94XxUQ4dn5oo/ba38M=\");\n_c = ThreeScene;\nexport default ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OrbitControls","gsap","jsxDEV","_jsxDEV","ThreeScene","_s","mountRef","cameraRef","_mountRef$current","scene","Scene","background","Color","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","current","renderer","WebGLRenderer","setSize","appendChild","domElement","mainBuildingGeometry","BoxGeometry","mainBuildingMaterial","MeshStandardMaterial","color","mainBuilding","Mesh","y","add","roofGeometry","ConeGeometry","roofMaterial","roof","rotation","Math","PI","ambientLight","AmbientLight","pointLight","PointLight","controls","enableDamping","dampingFactor","animate","requestAnimationFrame","update","render","_mountRef$current2","dispose","removeChild","cameraPositions","x","z","positionIndex","changeCameraAngle","pos","to","duration","onUpdate","_cameraRef$current","lookAt","length","children","onClick","style","zIndex","top","left","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/saba/portfolio/src/ThreeScene.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { gsap } from 'gsap';\n\nconst ThreeScene: React.FC = () => {\n    const mountRef = useRef<HTMLDivElement>(null);\n    const cameraRef = useRef<THREE.PerspectiveCamera | null>(null);\n\n    useEffect(() => {\n        const scene = new THREE.Scene();\n        scene.background = new THREE.Color(0xffffff);\n\n        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n        camera.position.set(10, 5, 10); // Initial camera position\n        cameraRef.current = camera; // Store camera reference for button access\n\n        const renderer = new THREE.WebGLRenderer();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        mountRef.current?.appendChild(renderer.domElement);\n\n        // Main Building\n        const mainBuildingGeometry = new THREE.BoxGeometry(4, 4, 4);\n        const mainBuildingMaterial = new THREE.MeshStandardMaterial({ color: 0x8b4513 });\n        const mainBuilding = new THREE.Mesh(mainBuildingGeometry, mainBuildingMaterial);\n        mainBuilding.position.y = 2;\n        scene.add(mainBuilding);\n\n        // Roof\n        const roofGeometry = new THREE.ConeGeometry(3.5, 2, 4);\n        const roofMaterial = new THREE.MeshStandardMaterial({ color: 0x8b0000 });\n        const roof = new THREE.Mesh(roofGeometry, roofMaterial);\n        roof.position.y = 5;\n        roof.rotation.y = Math.PI / 4;\n        scene.add(roof);\n\n        // Lighting\n        const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n        scene.add(ambientLight);\n\n        const pointLight = new THREE.PointLight(0xffffff, 1);\n        pointLight.position.set(10, 10, 10);\n        scene.add(pointLight);\n\n        // Controls\n        const controls = new OrbitControls(camera, renderer.domElement);\n        controls.enableDamping = true;\n        controls.dampingFactor = 0.25;\n\n        // Animation loop\n        function animate() {\n            requestAnimationFrame(animate);\n            controls.update();\n            renderer.render(scene, camera);\n        }\n\n        animate();\n\n        // Cleanup on unmount\n        return () => {\n            renderer.dispose();\n            mountRef.current?.removeChild(renderer.domElement);\n        };\n    }, []);\n\n    // Array of camera positions for smooth transition\n    const cameraPositions = [\n        { x: 10, y: 5, z: 10 },\n        { x: 0, y: 10, z: 10 },\n        { x: -10, y: 5, z: -10 },\n    ];\n    let positionIndex = 0;\n\n    // Function to smoothly change the camera angle using gsap\n    const changeCameraAngle = () => {\n        if (cameraRef.current) {\n            const pos = cameraPositions[positionIndex];\n            gsap.to(cameraRef.current.position, {\n                x: pos.x,\n                y: pos.y,\n                z: pos.z,\n                duration: 2, // Duration of the transition in seconds\n                onUpdate: () => {\n                    // Make sure the camera looks at the center of the scene during the transition\n                    cameraRef.current?.lookAt(0, 0, 0);\n                }\n            });\n\n            positionIndex = (positionIndex + 1) % cameraPositions.length;\n        }\n    };\n\n    return (\n        <div>\n            <button onClick={changeCameraAngle} style={{ position: 'absolute', zIndex: 1, top: 10, left: 10 }}>\n                Change Camera Angle\n            </button>\n            <div ref={mountRef} />\n        </div>\n    );\n};\n\nexport default ThreeScene;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}