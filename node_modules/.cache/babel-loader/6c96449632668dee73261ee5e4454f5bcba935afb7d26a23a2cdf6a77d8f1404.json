{"ast":null,"code":"var _jsxFileName = \"/Users/saba/portfolio/src/ThreeScene.tsx\",\n  _s = $RefreshSig$();\n// src/ThreeScene.tsx\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeScene = () => {\n  _s();\n  const mountRef = useRef(null);\n  const controls = new OrbitControls(camera, renderer.domElement);\n  controls.enableDamping = true; // Smooth control\n  controls.dampingFactor = 0.25;\n  useEffect(() => {\n    var _mountRef$current;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    (_mountRef$current = mountRef.current) === null || _mountRef$current === void 0 ? void 0 : _mountRef$current.appendChild(renderer.domElement);\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n\n    // Add after creating the cube\n    const light = new THREE.PointLight(0xffffff, 1); // White light, intensity of 1\n    light.position.set(5, 5, 5); // Position the light\n    scene.add(light);\n    camera.position.z = 5;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup function to remove renderer on unmount\n    return () => {\n      var _mountRef$current2;\n      renderer.dispose();\n      (_mountRef$current2 = mountRef.current) === null || _mountRef$current2 === void 0 ? void 0 : _mountRef$current2.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n};\n_s(ThreeScene, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ThreeScene;\nexport default ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OrbitControls","jsxDEV","_jsxDEV","ThreeScene","_s","mountRef","controls","camera","renderer","domElement","enableDamping","dampingFactor","_mountRef$current","scene","Scene","PerspectiveCamera","window","innerWidth","innerHeight","WebGLRenderer","setSize","current","appendChild","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","light","PointLight","position","set","z","animate","requestAnimationFrame","rotation","x","y","render","_mountRef$current2","dispose","removeChild","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saba/portfolio/src/ThreeScene.tsx"],"sourcesContent":["// src/ThreeScene.tsx\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\n\nconst ThreeScene: React.FC = () => {\n    const mountRef = useRef<HTMLDivElement>(null);\n    const controls = new OrbitControls(camera, renderer.domElement);\ncontrols.enableDamping = true; // Smooth control\ncontrols.dampingFactor = 0.25;\n\n\n    useEffect(() => {\n        const scene = new THREE.Scene();\n        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n        const renderer = new THREE.WebGLRenderer();\n\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        mountRef.current?.appendChild(renderer.domElement);\n\n        const geometry = new THREE.BoxGeometry();\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n        const cube = new THREE.Mesh(geometry, material);\n\n        scene.add(cube);\n\n        \n        // Add after creating the cube\n        const light = new THREE.PointLight(0xffffff, 1); // White light, intensity of 1\n        light.position.set(5, 5, 5); // Position the light\n        scene.add(light);\n\n        camera.position.z = 5;\n\n        const animate = () => {\n            requestAnimationFrame(animate);\n            cube.rotation.x += 0.01;\n            cube.rotation.y += 0.01;\n            renderer.render(scene, camera);\n        };\n        \n        animate();\n\n        // Cleanup function to remove renderer on unmount\n        return () => {\n            renderer.dispose();\n            mountRef.current?.removeChild(renderer.domElement);\n        };\n    }, []);\n\n    return <div ref={mountRef} />;\n};\n\nexport default ThreeScene;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}