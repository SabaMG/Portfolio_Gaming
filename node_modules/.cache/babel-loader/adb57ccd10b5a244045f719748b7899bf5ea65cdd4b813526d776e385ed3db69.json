{"ast":null,"code":"var _jsxFileName = \"/Users/saba/portfolio/src/ThreeScene.tsx\",\n  _s = $RefreshSig$();\n// src/ThreeScene.tsx\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { gsap } from 'gsap';\n\n// Add this after creating the cube\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ngsap.to(cube.scale, {\n  x: 2,\n  y: 2,\n  z: 2,\n  duration: 1,\n  yoyo: true,\n  repeat: -1\n});\nconst ThreeScene = () => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    var _mountRef$current;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true; // Smooth control\n    controls.dampingFactor = 0.25;\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    (_mountRef$current = mountRef.current) === null || _mountRef$current === void 0 ? void 0 : _mountRef$current.appendChild(renderer.domElement);\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n\n    // Add after creating the cube\n    const light = new THREE.PointLight(0xffffff, 1); // White light, intensity of 1\n    light.position.set(5, 5, 5); // Position the light\n    scene.add(light);\n    camera.position.z = 5;\n    function animate() {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      controls.update(); // Update controls\n      renderer.render(scene, camera);\n    }\n    animate();\n\n    // Cleanup function to remove renderer on unmount\n    return () => {\n      var _mountRef$current2;\n      renderer.dispose();\n      (_mountRef$current2 = mountRef.current) === null || _mountRef$current2 === void 0 ? void 0 : _mountRef$current2.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 12\n  }, this);\n};\n_s(ThreeScene, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ThreeScene;\nexport default ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OrbitControls","gsap","jsxDEV","_jsxDEV","to","cube","scale","x","y","z","duration","yoyo","repeat","ThreeScene","_s","mountRef","_mountRef$current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","controls","domElement","enableDamping","dampingFactor","setSize","current","appendChild","geometry","BoxGeometry","material","MeshBasicMaterial","color","Mesh","add","light","PointLight","position","set","animate","requestAnimationFrame","rotation","update","render","_mountRef$current2","dispose","removeChild","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saba/portfolio/src/ThreeScene.tsx"],"sourcesContent":["// src/ThreeScene.tsx\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { gsap } from 'gsap';\n\n// Add this after creating the cube\ngsap.to(cube.scale, { x: 2, y: 2, z: 2, duration: 1, yoyo: true, repeat: -1 });\n\n\n\nconst ThreeScene: React.FC = () => {\n    const mountRef = useRef<HTMLDivElement>(null);\n    \n\n    useEffect(() => {\n        const scene = new THREE.Scene();\n        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n        const renderer = new THREE.WebGLRenderer();\n        const controls = new OrbitControls(camera, renderer.domElement);\n        controls.enableDamping = true; // Smooth control\n        controls.dampingFactor = 0.25;\n\n\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        mountRef.current?.appendChild(renderer.domElement);\n\n        const geometry = new THREE.BoxGeometry();\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n        const cube = new THREE.Mesh(geometry, material);\n\n        scene.add(cube);\n\n        \n        // Add after creating the cube\n        const light = new THREE.PointLight(0xffffff, 1); // White light, intensity of 1\n        light.position.set(5, 5, 5); // Position the light\n        scene.add(light);\n\n        camera.position.z = 5;\n\n        function animate() {\n            requestAnimationFrame(animate);\n            cube.rotation.x += 0.01;\n            cube.rotation.y += 0.01;\n        \n            controls.update(); // Update controls\n            renderer.render(scene, camera);\n        }        \n        \n        animate();\n\n        // Cleanup function to remove renderer on unmount\n        return () => {\n            renderer.dispose();\n            mountRef.current?.removeChild(renderer.domElement);\n        };\n    }, []);\n\n    return <div ref={mountRef} />;\n};\n\nexport default ThreeScene;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}